temp_016

import sys
import cv2
import matplotlib.pyplot as plt
import numpy as np
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *


class Project(QMainWindow):
    def __init__(self):
        super().__init__()
        self.initUI()

    def initUI(self):
        self.setWindowTitle("MainWindow")
        self.sid = QImage('lcdrgb.jpg')

        btn = QPushButton("ImageChange", self)
        btn.resize(btn.sizeHint())
        btn.move(260, 50)
        btn.clicked.connect(self.openFileNameDialog)

        self.resize(640, 480)
        self.show()

    def center(self):
        qr = self.frameGeometry()
        cp = QDesktopWidget().availableGeometry().center()
        qr.moveCenter(cp)
        self.move(qr.topLeft())

    def openFileNameDialog(self):
        fileName, _ = QFileDialog.getOpenFileName(
            self, '불러올 이미지를 선택하세요', " ", "All Files (*);;")
        if fileName:
            print(fileName)
            self.sid = QImage(fileName).scaled(200, 200)

    def paintEvent(self, event):
        painter = QPainter()
        painter.begin(self)
        self.drawImage(painter)
        painter.end()

    def drawImage(self, painter):
        painter.drawImage(100, 100, self.sid)

        dst = self.histogram(self.sid)
        height, width, _ = dst.shape
        qimage = QImage(dst.data, width, height, width * 3, QImage.Format_RGB888)
        pixmap = QPixmap.fromImage(qimage)

        painter.drawPixmap(300, 100, pixmap)

    def histogram(self, image):
        src = cv2.imread("lcdrgb.jpg")
        gray = cv2.cvtColor(src, cv2.COLOR_BGR2GRAY)
        result = np.zeros((src.shape[0], 256), dtype=np.uint8)
        hist = cv2.calcHist([gray], [0], None, [256], [0, 256])
        cv2.normalize(hist, hist, 0, result.shape[0], cv2.NORM_MINMAX)

        for x, y in enumerate(hist):
            cv2.line(result, (int(x), result.shape[0]), (int(
                x), result.shape[0] - int(y)), 255)
        dst = np.hstack([gray, result])

        return dst


if __name__ == "__main__":
    app = QApplication(sys.argv)
    ex = Project()
    sys.exit(app.exec_())
---------------------------------------------------------------
    
        dst = self.histogram(self.sid)
        height, width, _ = dst.shape
        qimage = QImage(dst.data, width, height, width * 3, QImage.Format_RGB888)
        pixmap = QPixmap.fromImage(qimage)

        painter.drawPixmap(300, 100, pixmap)

히스토그램에서 생성된 이미지를 QPixmap을 활용하여 불러오는 코드를 작성, 

	    height, width, _ = dst.shape

부분에서 3개 중 2개의 인자를 받아서 실행 안됨

=>         height, width = dst.shape

맨 끝의 _를 삭제함으로써 해결
